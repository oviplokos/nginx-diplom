name: Build and Deploy to Kubernetes

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
env:
  IMAGE_NAME: oviplokos/nginx-diplom
  NAMESPACE: nginx-diplom
  DEPLOYMENT_NAME: nginx-diplom

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine Docker tag
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "TAG=latest" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true 
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.TAG }}
                 
  deploy:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: self-hosted
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set tag to env
        run: |
           if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
           fi 
           - name: Replace image tag in deployment.yaml
           run: |
             if [ ! -f ./deploy/deployment.yaml ]; then
               echo "deployment.yaml not found in the current directory"
               exit 1
             fi
             sed -i "s|image: oviplokos/nginx-diplom:.*|image: ${{ env.IMAGE_NAME }}:${{ env.VERSION }}|" ./nginx.yaml
 
  
      - name: Deploy to Kubernetes
       
        run: |
          kubectl set image oviplokos/${{ env.DEPLOYMENT_NAME }} ${{ env.DEPLOYMENT_NAME }}=${{ env.IMAGE_NAME }}:${{ env.TAG }} -n ${{ env.NAMESPACE }}
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} -n ${{ env.NAMESPACE }}
